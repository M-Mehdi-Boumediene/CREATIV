<?php

namespace Proxies\__CG__\Cosanit\CosanitBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Produits extends \Cosanit\CosanitBundle\Entity\Produits implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Cosanit\\CosanitBundle\\Entity\\Produits' . "\0" . 'id', 'countViews', '' . "\0" . 'Cosanit\\CosanitBundle\\Entity\\Produits' . "\0" . 'exclusive', '' . "\0" . 'Cosanit\\CosanitBundle\\Entity\\Produits' . "\0" . 'titre', '' . "\0" . 'Cosanit\\CosanitBundle\\Entity\\Produits' . "\0" . 'text1', '' . "\0" . 'Cosanit\\CosanitBundle\\Entity\\Produits' . "\0" . 'text2', '' . "\0" . 'Cosanit\\CosanitBundle\\Entity\\Produits' . "\0" . 'text3', 'categories', '' . "\0" . 'Cosanit\\CosanitBundle\\Entity\\Produits' . "\0" . 'image1', '' . "\0" . 'Cosanit\\CosanitBundle\\Entity\\Produits' . "\0" . 'alaune', '' . "\0" . 'Cosanit\\CosanitBundle\\Entity\\Produits' . "\0" . 'slug'];
        }

        return ['__isInitialized__', '' . "\0" . 'Cosanit\\CosanitBundle\\Entity\\Produits' . "\0" . 'id', 'countViews', '' . "\0" . 'Cosanit\\CosanitBundle\\Entity\\Produits' . "\0" . 'exclusive', '' . "\0" . 'Cosanit\\CosanitBundle\\Entity\\Produits' . "\0" . 'titre', '' . "\0" . 'Cosanit\\CosanitBundle\\Entity\\Produits' . "\0" . 'text1', '' . "\0" . 'Cosanit\\CosanitBundle\\Entity\\Produits' . "\0" . 'text2', '' . "\0" . 'Cosanit\\CosanitBundle\\Entity\\Produits' . "\0" . 'text3', 'categories', '' . "\0" . 'Cosanit\\CosanitBundle\\Entity\\Produits' . "\0" . 'image1', '' . "\0" . 'Cosanit\\CosanitBundle\\Entity\\Produits' . "\0" . 'alaune', '' . "\0" . 'Cosanit\\CosanitBundle\\Entity\\Produits' . "\0" . 'slug'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Produits $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitre($titre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitre', [$titre]);

        return parent::setTitre($titre);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitre', []);

        return parent::getTitre();
    }

    /**
     * {@inheritDoc}
     */
    public function setText1($text1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setText1', [$text1]);

        return parent::setText1($text1);
    }

    /**
     * {@inheritDoc}
     */
    public function getText1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getText1', []);

        return parent::getText1();
    }

    /**
     * {@inheritDoc}
     */
    public function setText2($text2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setText2', [$text2]);

        return parent::setText2($text2);
    }

    /**
     * {@inheritDoc}
     */
    public function getText2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getText2', []);

        return parent::getText2();
    }

    /**
     * {@inheritDoc}
     */
    public function setImage1(\Cosanit\CosanitBundle\Entity\Media $image1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImage1', [$image1]);

        return parent::setImage1($image1);
    }

    /**
     * {@inheritDoc}
     */
    public function getImage1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage1', []);

        return parent::getImage1();
    }

    /**
     * {@inheritDoc}
     */
    public function getAlaune()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAlaune', []);

        return parent::getAlaune();
    }

    /**
     * {@inheritDoc}
     */
    public function setAlaune($alaune)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAlaune', [$alaune]);

        return parent::setAlaune($alaune);
    }

    /**
     * {@inheritDoc}
     */
    public function addImage1(\Cosanit\CosanitBundle\Entity\Media $image1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addImage1', [$image1]);

        return parent::addImage1($image1);
    }

    /**
     * {@inheritDoc}
     */
    public function removeImage1(\Cosanit\CosanitBundle\Entity\Media $image1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeImage1', [$image1]);

        return parent::removeImage1($image1);
    }

    /**
     * {@inheritDoc}
     */
    public function setExclusive($exclusive)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExclusive', [$exclusive]);

        return parent::setExclusive($exclusive);
    }

    /**
     * {@inheritDoc}
     */
    public function getExclusive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExclusive', []);

        return parent::getExclusive();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategories(\Cosanit\CosanitBundle\Entity\Categories $categories = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategories', [$categories]);

        return parent::setCategories($categories);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategories()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategories', []);

        return parent::getCategories();
    }

    /**
     * {@inheritDoc}
     */
    public function setSlug($slug)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSlug', [$slug]);

        return parent::setSlug($slug);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlug()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlug', []);

        return parent::getSlug();
    }

    /**
     * {@inheritDoc}
     */
    public function getVisitableId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVisitableId', []);

        return parent::getVisitableId();
    }

    /**
     * {@inheritDoc}
     */
    public function getVisitableType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVisitableType', []);

        return parent::getVisitableType();
    }

    /**
     * {@inheritDoc}
     */
    public function onNewViewed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'onNewViewed', []);

        return parent::onNewViewed();
    }

    /**
     * {@inheritDoc}
     */
    public function countViews()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'countViews', []);

        return parent::countViews();
    }

    /**
     * {@inheritDoc}
     */
    public function setCountViews($countViews)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCountViews', [$countViews]);

        return parent::setCountViews($countViews);
    }

    /**
     * {@inheritDoc}
     */
    public function getCountViews()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCountViews', []);

        return parent::getCountViews();
    }

    /**
     * {@inheritDoc}
     */
    public function setText3($text3)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setText3', [$text3]);

        return parent::setText3($text3);
    }

    /**
     * {@inheritDoc}
     */
    public function getText3()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getText3', []);

        return parent::getText3();
    }

}
